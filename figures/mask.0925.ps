%!PS-Adobe-3.0
%%Creator: (ImageMagick)
%%Title: (mask.0925.ps)
%%CreationDate: (Sun Mar  2 22:24:11 1997)
%%BoundingBox: 236 341 375 450
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Orientation: Portrait
%%PageOrder: Ascend
%%Pages: 1
%%EndComments

%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def

/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /NewCenturySchlbk-Roman findfont pointsize scalefont setfont
  currentfile buffer readline pop
  0 y 12 add moveto buffer show pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 236 341 375 450
%%BeginData:
DisplayImage
236 341
140 110
18
            
140 110
1
0
0
2
000000
ffffff
010d0012011b00250101000e010000010102000201020001010200060109001401020000
01190024010000000100000e010000030100000101030002010200050117000401020003
01170005010000200103000801030003010000020102000b0108000b0107001801040025
01000001010000000100000901010000010000020102000101030001010000070108003f
01000000010600050103001d0101000501120032010c000801030001010400020100002d
0105002f010e000e01050001010300180100000e010800270115000e010500010100001c
0101000d0144000f010500030100000901000010010f000001010003010b0004012b000d
01010001010500030101000a0103000301010003010f0007010a0004012a001001000008
011200040101000301100004010a0005012b001601050002010000030108000a011e0006
012a0013010200100106000b011d0006012b000901000006010400130102000d01010000
01030008010a0006012c00090101000601070015010200030102001101080007012b000a
010200070109000001020010010500000100001101080006012b000b0102000201000005
010200070101000801000006010300020101000f01080005012a000b0104000201000000
010100020100000001020006010000010101000c010400020104000b010700040103000a
011c000a01020001010000030104000101000000010100070104000c0104001301020003
010000030102000e011a000901030001010000060101000101000000010000090102000d
010400030101000d0101000401080001010c000001170002010000010108000101000006
01010001010000010104000301030002010300040106000201000016010300000104000d
0126000201000002010400020100000101040003010c0000010500040101000401050003
0100000c0101000f01260002010000020104000201000001010000070113000201050007
0105000a0107000b01020003011f000201000008010100030105000001090006010f0001
0106000b0100000101010003010100020100000201040004011e00030100001f0100000d
010600020104000e010400020105000201040001012100030100001f0101000a01070003
0104000e013800040100000c0106000b010b000101050005010000050109001701200006
01000002010600000101000001050006010f000601040000010000000102000301000000
01070018011e0008010c00000100000a0105000001080011010100000101000101070017
011e00080100000101070001010000010105000201030000010200000106000001000014
010000020110000101070000010000010103000001190009010000020105000201060006
01040001010500010100001201000000010c00050108000701020001011a000701120007
010e00180111000601060005011b000601000001010b00000101000801030000010a000e
0101000101020000010900020109000201070004011a0007010b00000100000001000009
010300010113000e011a000201010005011a00080100000b0107000101040002010d0000
010300000100000d0109000c010700160109000801000009010e00070100000601060005
010600040109003e01030000010c00020104001101020008010000000104000301090054
01020029010900030100007e010800290106000a01010043010b00010100001e010c0004
0102000101030041010800000103000501170003010d000101020003010200240107001a
010700040115000c010e000001030003011d000001040005010f000701030000011e000d
010a00020100000101200017010b000801050002011400140101000201030000011e0017
010e00090103000201150005010600040100000101000004010200000118000201010018
0112000301040004010a0000010800110100000101000003011500030100001f010f0012
010a000001070012010000010100000301140020010000000111000f0107000501020000
01040012010000010102000001100024010000000112000e0104000001030000010b0012
0100000201000006010b0002010400120100000001010000010000050117000601050000
011300130100000201000005010800000101001201020011010000000110000a01040001
011300050100000301010006010000020100000501080012010200050100000501000005
0113000a0117000001000006010000020101000b01000001010c00110102000e0119000b
011600000100000a010300020100000101000003010b0014010000050105000201030003
0115000301000009011000010100000a010200040100000001010002010b000a01000000
0100000a010000000100000001070013010700020102000301000006010f00010100000a
010100060100000001000002011a00000100000001060000010900150106000901000019
01000008010000000100000601000000010000030106000201000004010f0000010c0015
0111001a0100000201050001010000060102000501020002010100040121000f01000001
0109002b0101000001010008010000030103000101250000010000080100000001010004
010000010107002401000009010000000101000301000001010100030129001601090024
010000090100000201010004010100010100000301260002010000190102002401000000
010200040103000601020001010000030126001901000002010000230101000301130002
010000030127001c01020015010e00000100000501070008010100030126001d01260001
0100000501060003010600040123002301000008011b0001010200060103000e01230021
012500000100006001030003012000010100004201000002010000030100000601010005
0100000201280002010000110103002b0105000201000006010000000101000401020000
0106000001200000010100010105000a0102002a01010002010000130101000301060003
011c0004010400340102000001140006010000030127002d011600090105000e01290002
01000005010c000101000001010a000201180020014a0003011b002001010000012f0007
010c00000121002001300005010c000101240020012f0003011500010101000201190020
0102000701040007010d00010106000401010000010a00000101000201000001011f0020
0100000401050001011700000106000501150002011e001f010000000102001201150004
0100000101010000010900000104000201010000011e0001010300170101001601140003
010200000102000101000000010900010144001701000001010e00050106000001000000
0150001c016d00060101000f0100000301000001016a00090100000d0100000101000003
016a000001000003010000000100000f010100000170001701010004016d001401020004
016c00170101000101020001017900090100000001010000010000020169000101040007
0103000401030000013a0000013300000102000a01030009016d0005010000070100000d
016d000701040012016c001f013400040134001e01070001012b00000102000001430021
011a0000010100020100000101020000012b00010104000201030031010f000001050000
010000000131004001110000010200010132003e010f000a0131003b011b000201000000
012e000101020031011a00000106000001300033012000000135002d015d002401bd0000
01020000018a0000014b00010102000001030000014c00000100000c0108000001020000
01000010016a000001050001012c0000014e000001000001010b
%%EndData
%%PageTrailer
%%Trailer
%%BoundingBox: 236 341 375 450
%%EOF
