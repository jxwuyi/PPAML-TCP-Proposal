%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 236 341 376 451
%%HiResBoundingBox: 236.000000 341.000000 376.000000 451.000000
%%Creator: (ImageMagick)
%%Title: (mask.0100.ps)
%%CreationDate: (Sun Mar  2 21:34:30 1997)
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%PageOrder: Ascend
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginDefaults
%%PageOrientation: Portrait
%%EndDefaults
%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/buffer 512 string def
/byte 1 string def
/color_packet 3 string def
/pixels 768 string def
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def
/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def
/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def
/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 gt
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def
/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 gt
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def
/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def
/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-RunlengthEncodedCompression or 1-NoCompression.
  %   hex color packets.
  %
  gsave
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /NewCenturySchlbk-Roman findfont pointsize scalefont setfont
  currentfile buffer readline pop
  0 y 12 add moveto buffer show pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
  showpage
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 236 341 375 450
%%BeginData:
DisplayImage
236 341
140 110
18
            
140 110
1
0
0
2
000000
ffffff
0108001e01170000010000000150001f0102000601100000012c000101040000011b001e
0106000c015b001b01030010015a001a01030013015400020100001a0102000f01000005
01570019010500130129000001030000011c00020101001f010100010101000f01330000
011a00030101001f010100000101000d015100050101001e010100000101000c01520007
010100190107000d010100030117000e0102000201010000012500180108000201020002
01010003010000030115001001040002011c002101090001010000020101000701010001
0115001001240020010a0001010100000100000d0114001201010003011d0020010a0013
0114001201010004011c0020010c0001010700070113001a011c0020010b001301130012
01030000011e0020010b00240102001101030002011d0020010b00240100000001030002
0102000801030002011d0021010a00280100000f01010004011d00200107000001020020
01020004010000030103000d011e00150101000801070000010200180111000101000003
010700030120000a010000070103000701310007010000030100000c011e001201040006
010400010102000101280019011b00130105000501050001012b001b011b001301050004
0106000101010000010000050121001e0103000501000000010b00010100001101030000
010000030101000001030000010200010101000401200033010200150105000201000002
01020005010500010120003201030015010500000101000301020005010200030121002e
010800140107000401020002010300020100000101210028010f00130106000301030002
0108000101220019011b000101010011010700010103000601000002010100010122000e
012500000102001201030005010200090102000201250008012d00100103000901010007
0101000301260004012e00110104000b010000060102000201240002012100110100000e
0104000b010100070100000301230004011e00220105000b010000070102000101480021
0106000b0100000c01120007010000010104000201210022010400000100000a0100000f
01000028011a0004010900130107000a01010046010c000201010004010700000101000c
010000010105000a01010045010c00040101000e0100000a01000002010b00040101003c
0114000301020010010000080101000201030000010700030101001f010c0006011d0016
0100000801000002010500000104000101000002010100150118000a0118002201050003
010300000101000101030010011b0016010c002701020008010000020102000f01000014
0104000001010014010c002a01010006010100030101000e010000070109000201050000
01010012010e002b01010006010000030101000d010000010103000d0108000001000011
010f002b01010007010200000101000d010000010110000101030000010200010100000f
0110000301040000010000110100000d0100000a01020011011a000101000002011d0003
0104000001000008010000000109000a0100001c0100000201110000010a0001011e001a
010d00010100001c01000002011400000128001a010800060100001f0115000001050002
01330006010900050100001b01000002010f00020101000101040004011f0000010a0006
0110000501000015010300000101000d01020009010000070121000701000006010c0003
010100040100000c010200060101002501030000011d0003010200030104000801050001
010300030100001b0100001e0101000001020002011c000301030012010900030100001c
010000180104000201020001011d001c010700030101001a01000019010300020126001b
01040004010000370133001e0100001b0100001a01070000013400030100000f0101001a
0100001a010700010138000f0100001a0100001b010600010139000f0101001a0100001a
01070000013900060109001b01000019010200060139000601000024010a000101020003
0106000a013e001b010b000101030003010700130164003f010000000100000001480048
01420046014400070101003c0144000401030037014a00390151002a01ff01ff01ff01ff
014d000001ff01ff01b7000001ff01ff01b50000018900010188000101ff01ff012a0000
018a000201ff016600010189000201880002018800010101000101310002015400020130
000101520006019a00000101000a01000002014900020141000001030000014a00010103
0001012f000001500000010f
%%EndData
%%PageTrailer
%%Trailer
%%BoundingBox: 236 341 375 450
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
